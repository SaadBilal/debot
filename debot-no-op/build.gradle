apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

group = 'com.tomoima.debot'
version = '1.1.0'

def siteUrl = 'https://github.com/tomoima525/debot'
def gitUrl = 'https://github.com/tomoima525/debot.git'

bintray {
    user = bintrayUserProperty
    key = bintrayApiKeyProperty

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'debot-no-op'
        vcsUrl = gitUrl
        desc = 'A simple Android library to create Debugging menu.'
        issueTrackerUrl = 'https://github.com/tomoima525/debot/issues'
        licenses = ['Apache-2.0']
        vcsUrl = gitUrl
        labels = ['android']
        publicDownloadNumbers = true

    }

}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'debot-no-op'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'tomoima525'
                        name 'Tomoaki Imai'
                        email 'tomoima525@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/tomoima525/debot.git'
                    developerConnection 'https://github.com/tomoima525/debot.git'
                    url siteUrl

                }
            }
        }
    }
}

def getBintrayUserProperty() {
    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
}

def getBintrayApiKeyProperty() {
    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.1'
}
